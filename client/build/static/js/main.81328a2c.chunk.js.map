{"version":3,"sources":["components/ProductList/index.js","components/Wrapper/index.js","components/Header/index.js","utils/API.js","pages/Home.js","components/Jumbotron/index.js","utils/GlobalState.js","components/Login/login.js","components/Login/regiester.js","components/Login/index.js","components/Nav/index.js","components/DeleteBtn/index.js","context/ProduceContext.jsx","App.js","index.js"],"names":["ProductList","props","react_default","a","createElement","produce","map","item","CardDeck","key","_id","Card","Img","variant","Body","Title","name","Text","description","Footer","className","inventory","Wrapper","Object","assign","Header","src","API","_postProduce$removepr","postProduce","data","axios","post","removeproduce","id","delete","postUser","postLogin","withCredentials","defineProperty","put","get","Home","_useState","useState","_useState2","slicedToArray","produceState","useEffect","getProduce","then","res","console","log","catch","err","components_Wrapper","components_Header","components_ProductList","Jumbotron","StoreContext","createContext","Provider","formValid","_ref","formErrors","rest","objectWithoutProperties","valid","values","forEach","val","length","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","state","concat","username","password","title","setState","setShow","error","response","localStorage","setItem","JSON","stringify","handleSuccessfulAuth","LogginError","handleChange","_e$target","target","value","objectSpread","isLoggedIn","type","hidden","toggleShow","bind","assertThisInitialized","_this2","ref","containerRef","htmlFor","placeholder","onChange","Button","onClick","Form","inline","Modal","show","size","aria-labelledby","centered","closeButton","window","location","replace","removeItem","React","Component","emailRegex","RegExp","Register","email","address","RegisterError","test","score","passwordStrength","_e$target2","pw","zxcvbn","Fragment","Address","data-score","LoginIndex","isLogginActive","isAuthenicated","handleLogin","rightSide","classList","add","remove","prevState","current","currentActive","container","login","regiester","Login_RightSide","changeState","RightSide","DeleteBtn","produceContext","App","BrowserRouter","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"sSA8BeA,MA1Bf,SAAqBC,GACnB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BAECH,EAAMI,QAAQC,IAAI,SAACC,GAElB,OACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,IAAOF,EAAKG,KACpBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAKC,IAAN,CAAUC,QAAQ,QAClBX,EAAAC,EAAAC,cAACO,EAAA,EAAKG,KAAN,KACEZ,EAAAC,EAAAC,cAACO,EAAA,EAAKI,MAAN,KAAaR,EAAKS,MAClBd,EAAAC,EAAAC,cAACO,EAAA,EAAKM,KAAN,KAAYV,EAAKW,cAEnBhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,OAAN,KACEjB,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,cAAjB,cAA0Cb,EAAKc,wBCbhDC,MAJf,SAAiBrB,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAAmB,OAAAC,OAAA,CAAMJ,UAAU,WAAcnB,KCYxBwB,QAbf,WACI,OACIvB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACAT,EAAAC,EAAAC,cAACO,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMa,IAAI,kHAC5BxB,EAAAC,EAAAC,cAACO,EAAA,EAAKG,KAAN,KACEZ,EAAAC,EAAAC,cAACO,EAAA,EAAKM,KAAN,+mBCNVU,GAAAC,EAAA,CACEC,YAAa,SAACC,GAAD,OAAUC,IAAMC,KAAK,gBAAiBF,IAEnDG,cAAe,SAACC,GAAD,OAAQH,IAAMI,OAAO,gBAAkBD,IAEtDE,SAAU,SAACN,GAAD,OAAUC,IAAMC,KAAK,oBAAqBF,IAGpDO,UAAW,SAACP,GAAD,OAAUC,IAAMC,KAAK,mBAAoBF,EAAM,CAAEQ,iBAAiB,MAR/Ef,OAAAgB,EAAA,EAAAhB,CAAAK,EAAA,gBAUiB,SAACE,GAAD,OAAUC,IAAMS,IAAI,gBAAiBV,KAVtDP,OAAAgB,EAAA,EAAAhB,CAAAK,EAAA,UAYW,kBAAMG,IAAMU,IAAI,gBAZ3BlB,OAAAgB,EAAA,EAAAhB,CAAAK,EAAA,aAec,kBAAMG,IAAMU,IAAI,mBAf9BlB,OAAAgB,EAAA,EAAAhB,CAAAK,EAAA,SAiBU,kBAAMG,IAAMU,IAAI,mBAjB1BlB,OAAAgB,EAAA,EAAAhB,CAAAK,EAAA,YAmBa,SAACE,GAAD,OAAUC,IAAMC,KAAK,cAAeF,KAnBjDP,OAAAgB,EAAA,EAAAhB,CAAAK,EAAA,WAqBa,kBAAMG,IAAMU,IAAI,iBArB7Bb,GC6Bec,EAzBF,SAACzC,GAAU,IAAA0C,EACUC,mBAAS,IADnBC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAoB,EAAA,GACftC,EADewC,EAAA,GACNE,EADMF,EAAA,GActB,OATAG,oBAAU,WACRrB,EAAIsB,aACDC,KAAK,SAACC,GACLC,QAAQC,IAAIF,GACZJ,EAAaI,EAAIrB,QAElBwB,MAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MAC7B,IAGDrD,EAAAC,EAAAC,cAACoD,EAAD,KACEtD,EAAAC,EAAAC,cAACqD,EAAD,MAGAvD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsD,EAAD,CAAarD,QAASA,mCCbbsD,2BCDTC,SAAeC,8BACAD,EAAbE,iGCPFC,EAAY,SAAAC,GAA6B,IAA1BC,EAA0BD,EAA1BC,WAAeC,EAAW3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,gBACzCI,GAAQ,EAYZ,OATA7C,OAAO8C,OAAOJ,GAAYK,QAAQ,SAAAC,GAChCA,EAAIC,OAAS,IAAMJ,GAAQ,KAI7B7C,OAAO8C,OAAOH,GAAMI,QAAQ,SAAAC,GAClB,OAARA,IAAiBH,GAAQ,KAGpBA,GAwMMK,cApMb,SAAAA,EAAYxE,GAAO,IAAAyE,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,KAAAH,IACjBC,EAAAnD,OAAAsD,EAAA,EAAAtD,CAAAqD,KAAArD,OAAAuD,EAAA,EAAAvD,CAAAkD,GAAAM,KAAAH,KAAM3E,KA0BR+E,aAAe,SAAAC,GACbA,EAAEC,iBAGEnB,EAAUW,EAAKS,OACjB/B,QAAQC,IAAR,+CAAA+B,OAEcV,EAAKS,MAAME,SAFzB,wBAAAD,OAGcV,EAAKS,MAAMG,SAHzB,qBAAAF,OAIWV,EAAKS,MAAMI,MAJtB,cAQAb,EAAKc,SAAS,CAAEC,SAAS,IACzBrC,QAAQsC,MAAM,yCAIhB/D,EAAIU,UAAUqC,EAAKS,OAChBjC,KAAK,SAACyC,GAELjB,EAAKc,SAAS,CAACD,MAAMI,EAAS7D,KAAKyD,QACnCb,EAAKc,SAAS,CAACF,SAASK,EAAS7D,KAAKwD,WACtClC,QAAQC,IAAIsC,EAAS7D,KAAKyD,MAAO,eAAgBb,EAAKS,OAEtDS,aAAaC,QAAQ,WACnBC,KAAKC,UAAUrB,EAAKS,QAEtBT,EAAKzE,MAAM+F,qBAAqBtB,EAAKS,SAEpC7B,MAAM,SAACC,GAERmB,EAAKc,SAAS,CAAEC,SAAS,IACzBf,EAAKc,SAAS,CAAES,YAAa,mCA5DhBvB,EAkEnBwB,aAAe,SAAAjB,GAEbA,EAAEC,iBAFgB,IAAAiB,EAQMlB,EAAEmB,OAAlBpF,EARUmF,EAQVnF,KAAMqF,EARIF,EAQJE,MACVpC,EAAU1C,OAAA+E,EAAA,EAAA/E,CAAA,GAAQmD,EAAKS,MAAMlB,YAEjC,OAAQjD,GACN,IAAK,WACHiD,EAAWoB,SACTgB,EAAM7B,OAAS,EAAI,iCAAmC,GACxD,MACF,IAAK,WACHP,EAAWqB,SACTe,EAAM7B,OAAS,EAAI,iCAAmC,GAM5DE,EAAKc,SAALjE,OAAAgB,EAAA,EAAAhB,CAAA,CAAgB0C,cAAajD,EAAOqF,KAvFpC3B,EAAKS,MAAQ,CACXE,SAAU,KACVC,SAAU,KACVC,MAAO,SACPgB,YAAY,EAEZtC,WAAY,CACVoB,SAAU,GACVC,SAAU,GACVC,MAAO,IAETE,SAAS,EACTe,KAAM,QACNC,QAAQ,EACRR,YAAa,IAIfvB,EAAKgC,WAAahC,EAAKgC,WAAWC,KAAhBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KAClBA,EAAKwB,aAAexB,EAAKwB,aAAaS,KAAlBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KACpBA,EAAKM,aAAeN,EAAKM,aAAa2B,KAAlBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KAvBHA,4EAgGjBE,KAAKY,SAAS,CAAEiB,QAAS7B,KAAKO,MAAMsB,0CAO7B,IAAAI,EAAAjC,KACCX,EAAeW,KAAKO,MAApBlB,WAGR,OACE/D,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,iBAAiB0F,IAAKlC,KAAK3E,MAAM8G,cAC9C7G,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,UAAf,SACAlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WAEblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cACblB,EAAAC,EAAAC,cAAA,SAAO4G,QAAQ,YAAf,YACA9G,EAAAC,EAAAC,cAAA,SACEoG,KAAK,OACLxF,KAAK,WACLiG,YAAY,WACZC,SAAUtC,KAAKsB,eAEhBjC,EAAWoB,SAASb,OAAS,GAC5BtE,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiC6C,EAAWoB,WAGhDnF,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cACblB,EAAAC,EAAAC,cAAA,SAAO4G,QAAQ,YAAf,YACA9G,EAAAC,EAAAC,cAAA,SACEoG,KAAM5B,KAAKO,MAAMsB,OAAS,WAAa,OACvCzF,KAAK,WACLiG,YAAY,WACZC,SAAUtC,KAAKsB,eACjBhG,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAQC,QAASxC,KAAK8B,YACA,UAApB9B,KAAKO,MAAMqB,KAAmB,OAAS,SAI3CtG,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAMC,QAAM,GAWTrD,EAAWqB,SAASd,OAAS,GAC5BtE,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiC6C,EAAWqB,aAMpDpF,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,UACblB,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACEX,KAAK,SACLpF,UAAU,MACVgG,QAASxC,KAAKI,cAHhB,UAUF9E,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACEC,KAAM5C,KAAKO,MAAMM,QACjBgC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,GAERzH,EAAAC,EAAAC,cAACmH,EAAA,EAAM9F,OAAP,CAAcmG,aAAW,GACvB1H,EAAAC,EAAAC,cAACmH,EAAA,EAAMxG,MAAP,CAAamB,GAAG,gCACdhC,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,cAAhB,aAGJlB,EAAAC,EAAAC,cAACmH,EAAA,EAAMzG,KAAP,KACEZ,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiCwD,KAAKO,MAAMc,cAE9C/F,EAAAC,EAAAC,cAACmH,EAAA,EAAMpG,OAAP,KACEjB,EAAAC,EAAAC,cAAA,UACEgH,QAAS,WACNP,EAAKrB,SAAS,CAAEC,SAAS,IAC1BoC,OAAOC,SAASC,QAAQ,KACxBnC,aAAaoC,WAAW,YACxBpC,aAAaoC,WAAW,UAL5B,mBAtLQC,IAAMC,4BCZpBC,EAAaC,OACjB,6EAGIrE,EAAY,SAAAC,GAA6B,IAA1BC,EAA0BD,EAA1BC,WAAeC,EAAW3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,gBACzCI,GAAQ,EAYZ,OATA7C,OAAO8C,OAAOJ,GAAYK,QAAQ,SAAAC,GAChCA,EAAIC,OAAS,IAAMJ,GAAQ,KAI7B7C,OAAO8C,OAAOH,GAAMI,QAAQ,SAAAC,GAClB,OAARA,IAAiBH,GAAQ,KAGpBA,GA0PMiE,cArPb,SAAAA,EAAYpI,GAAO,IAAAyE,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,KAAAyD,IACjB3D,EAAAnD,OAAAsD,EAAA,EAAAtD,CAAAqD,KAAArD,OAAAuD,EAAA,EAAAvD,CAAA8G,GAAAtD,KAAAH,KAAM3E,KAkDR+E,aAAe,SAAAC,GAGbA,EAAEC,iBAEEnB,EAAUW,EAAKS,OACjB/B,QAAQC,IAAR,+CAAA+B,OAEcV,EAAKS,MAAME,SAFzB,qBAAAD,OAGWV,EAAKS,MAAMmD,MAHtB,wBAAAlD,OAIcV,EAAKS,MAAMG,SAJzB,uBAAAF,OAKaV,EAAKS,MAAMoD,QALxB,qBAAAnD,OAMWV,EAAKS,MAAMI,MANtB,cAUAb,EAAKc,SAAS,CAAEC,SAAS,IACzBf,EAAKc,SAAS,CAAEgD,cAAe,yCAC/BpF,QAAQsC,MAAM,yCAGhB/D,EAAIS,SAASsC,EAAKS,OACfjC,KAAK,SAACyC,GACLvC,QAAQC,IAAI,cAAesC,GAC3BkC,OAAOC,SAASC,QAAQ,oBAGzBzE,MAAM,WACLoB,EAAKc,SAAS,CAAEC,SAAS,IACzBf,EAAKc,SAAS,CAAEgD,cAAgB,uCAhFnB9D,EAwFnBwB,aAAe,SAAAjB,GAEbA,EAAEC,iBAFgB,IAAAiB,EAQMlB,EAAEmB,OAAlBpF,EARUmF,EAQVnF,KAAMqF,EARIF,EAQJE,MACVpC,EAAU1C,OAAA+E,EAAA,EAAA/E,CAAA,GAAQmD,EAAKS,MAAMlB,YAEjC,OAAQjD,GACN,IAAK,WACHiD,EAAWoB,SACTgB,EAAM7B,OAAS,EAAI,iCAAmC,GACxD,MACF,IAAK,QACHP,EAAWqE,MAAQH,EAAWM,KAAKpC,GAC/B,GACA,wBACJ,MACF,IAAK,WACHpC,EAAWqB,SACTe,EAAM7B,OAAS,EAAI,iCAAmC,GAM5DE,EAAKc,SAALjE,OAAAgB,EAAA,EAAAhB,CAAA,CAAgB0C,cAAajD,EAAOqF,KAnHpC3B,EAAKS,MAAQ,CACXE,SAAU,KACViD,MAAO,KACPhD,SAAU,KACViD,QAAS,KACThD,MAAO,SACPtB,WAAY,CACVoB,SAAU,GACViD,MAAO,GACPhD,SAAU,GACViD,QAAS,IAEX9C,SAAS,EACTe,KAAM,QACNkC,MAAO,OACPjC,QAAQ,EACR+B,cAAe,IAIjB9D,EAAKgC,WAAahC,EAAKgC,WAAWC,KAAhBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KAClBA,EAAKiE,iBAAmBjE,EAAKiE,iBAAiBhC,KAAtBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KACxBA,EAAKwB,aAAexB,EAAKwB,aAAaS,KAAlBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KACpBA,EAAKM,aAAeN,EAAKM,aAAa2B,KAAlBpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KAzBHA,gFA8BFO,GAAG,IAAA2D,EAEM3D,EAAEmB,OAAlBpF,EAFU4H,EAEV5H,KAAMqF,EAFIuC,EAEJvC,MACVpC,EAAU1C,OAAA+E,EAAA,EAAA/E,CAAA,GAAQqD,KAAKO,MAAMlB,YAEjC,GAAuB,KAAnBgB,EAAEmB,OAAOC,MACXzB,KAAKY,SAAS,CACZkD,MAAO,aAGN,CACH,IAAIG,EAAKC,IAAO7D,EAAEmB,OAAOC,OACzBzB,KAAKY,SAAS,CACZkD,MAAOG,EAAGH,QAGd9D,KAAKY,SAALjE,OAAAgB,EAAA,EAAAhB,CAAA,CAAgB0C,cAAajD,EAAOqF,yCA6EpCzB,KAAKY,SAAS,CAAEiB,QAAS7B,KAAKO,MAAMsB,0CAI7B,IAAAI,EAAAjC,KAECX,EAAeW,KAAKO,MAApBlB,WAIR,OACE/D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4I,SAAA,KACE7I,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,iBAAiB0F,IAAKlC,KAAK3E,MAAM8G,cAC9C7G,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,UAAf,YACAlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAEblB,EAAAC,EAAAC,cAAA,SAAO4G,QAAQ,YAAf,YACA9G,EAAAC,EAAAC,cAAA,SACEoG,KAAK,OACLxF,KAAK,WACLiG,YAAY,WACZC,SAAUtC,KAAKsB,eAEhBjC,EAAWoB,SAASb,OAAS,GAC5BtE,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiC6C,EAAWoB,WAIhDnF,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAEblB,EAAAC,EAAAC,cAAA,SAAO4G,QAAQ,SAAf,SACA9G,EAAAC,EAAAC,cAAA,SACEoG,KAAK,OACLxF,KAAK,QACLiG,YAAY,QACZC,SAAUtC,KAAKsB,eAEhBjC,EAAWqE,MAAM9D,OAAS,GACzBtE,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiC6C,EAAWqE,QAIhDpI,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAEblB,EAAAC,EAAAC,cAAA,SAAO4G,QAAQ,WAAf,WACA9G,EAAAC,EAAAC,cAAA,SACEoG,KAAK,OACLxF,KAAK,UACLiG,YAAY,UACZC,SAAUtC,KAAKsB,eAEhBjC,EAAWsE,QAAQ/D,OAAS,GAC3BtE,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiC6C,EAAW+E,UAIhD9I,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cACblB,EAAAC,EAAAC,cAAA,SAAO4G,QAAQ,YAAf,YAEA9G,EAAAC,EAAAC,cAAA,SACEgB,UAAU,kBACVoF,KAAM5B,KAAKO,MAAMsB,OAAS,WAAa,OACvCzF,KAAK,WACLiG,YAAY,WAEZC,SAAUtC,KAAK+D,mBAEjBzI,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAQC,QAASxC,KAAK8B,YACA,UAApB9B,KAAKO,MAAMqB,KAAmB,OAAS,QAEzCtG,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,qBAAqB6H,aAAYrE,KAAKO,MAAMuD,QAE3DzE,EAAWqB,SAASd,OAAS,GAC5BtE,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiC6C,EAAWqB,WAIhDpF,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CACEX,KAAK,SACLpF,UAAU,MACVgG,QAASxC,KAAKI,cAHhB,cASJ9E,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WAKflB,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACEC,KAAM5C,KAAKO,MAAMM,QACjBgC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,GAERzH,EAAAC,EAAAC,cAACmH,EAAA,EAAM9F,OAAP,CAAcmG,aAAW,GACvB1H,EAAAC,EAAAC,cAACmH,EAAA,EAAMxG,MAAP,CAAamB,GAAG,gCAAhB,aAIFhC,EAAAC,EAAAC,cAACmH,EAAA,EAAMzG,KAAP,KACAZ,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gBAAhB,IAAiCwD,KAAKO,MAAMqD,gBAE5CtI,EAAAC,EAAAC,cAACmH,EAAA,EAAMpG,OAAP,KACAjB,EAAAC,EAAAC,cAAA,UACEgH,QAAS,WACNP,EAAKrB,SAAS,CAAEC,SAAS,IAC1BoC,OAAOC,SAASC,QAAQ,KACxBnC,aAAaoC,WAAW,YACxBpC,aAAaoC,WAAW,UAL5B,oBAxOWC,IAAMC,WCrBvBgB,cACJ,SAAAA,EAAYjJ,GAAO,IAAAyE,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,KAAAsE,IACjBxE,EAAAnD,OAAAsD,EAAA,EAAAtD,CAAAqD,KAAArD,OAAAuD,EAAA,EAAAvD,CAAA2H,GAAAnE,KAAAH,KAAM3E,KACDkF,MAAQ,CACXgE,gBAAgB,EAChBC,gBAAgB,GAElB1E,EAAKsB,qBAAuBtB,EAAKsB,qBAAqBW,KAA1BpF,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAmD,KAC5BtB,QAAQC,IAAI,+BAAgCqB,EAAKzE,OAPhCyE,oFAWE5C,GAGnBsB,QAAQC,IAAI,IAAKvB,GACjB8C,KAAK3E,MAAMoJ,YAAYvH,GACvB+F,OAAOC,SAASC,QAAQ,iDAKxBnD,KAAK0E,UAAUC,UAAUC,IAAI,+CAKF5E,KAAKO,MAAxBgE,gBAGNvE,KAAK0E,UAAUC,UAAUE,OAAO,SAChC7E,KAAK0E,UAAUC,UAAUC,IAAI,UAE7B5E,KAAK0E,UAAUC,UAAUE,OAAO,QAChC7E,KAAK0E,UAAUC,UAAUC,IAAI,UAE/B5E,KAAKY,SAAS,SAAAkE,GAAS,MAAK,CAAEP,gBAAiBO,EAAUP,mDAQlD,IAAAtC,EAAAjC,KAGCuE,EAAmBvE,KAAKO,MAAxBgE,eACFQ,EAAUR,EAAiB,WAAa,QACxCS,EAAgBT,EAAiB,QAAU,WAGjD,OAEEjJ,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SAEblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,YAAY0F,IAAK,SAAAA,GAAG,OAAKD,EAAKgD,UAAY/C,IAEtDqC,GACCjJ,EAAAC,EAAAC,cAAC0J,EAAD,CACA/C,aAAc,SAAAD,GAAG,OAAKD,EAAK8C,QAAU7C,GACrCd,qBAAsBpB,KAAKoB,wBAG3BmD,GACAjJ,EAAAC,EAAAC,cAAC2J,EAAD,CAAUhD,aAAc,SAAAD,GAAG,OAAKD,EAAK8C,QAAU7C,MAKnD5G,EAAAC,EAAAC,cAAC4J,EAAD,CACEL,QAASA,EACTC,cAAeA,EACf7C,aAAc,SAAAD,GAAG,OAAKD,EAAKyC,UAAYxC,GACvCM,QAASxC,KAAKqF,YAAYtD,KAAK/B,iBA3ElBqD,IAAMC,WAmFzBgC,EAAY,SAAAjK,GAChB,OACEC,EAAAC,EAAAC,cAAA,OACEgB,UAAU,aACV0F,IAAK7G,EAAM8G,aACXK,QAASnH,EAAMmH,SAEflH,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,mBACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QAAQnB,EAAM0J,YAMtBT,sCCnGOjB,IAAMC,sCCKbiC,ICVTC,EAAiBvG,0BA8BFuG,EAAbtG,+CCkEOuG,MA/Cf,WAGE,OACEnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KASEpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWhI,IACnCxC,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,QAASC,UAAWhI,MC9D7CiI,IAASC,OAAO1K,EAAAC,EAAAC,cAACyK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.81328a2c.chunk.js","sourcesContent":["import React from \"react\";\nimport { CardDeck, Card } from \"react-bootstrap\";\nimport \"./style.css\";\n\nfunction ProductList(props) {\n  return (\n    <div>\n      <h4>Featured Products</h4>\n\n      {props.produce.map((item) => {\n\n        return (\n          <CardDeck key = {item._id}>\n            <Card>\n              <Card.Img variant=\"top\" />\n              <Card.Body>\n                <Card.Title>{item.name}</Card.Title>\n                <Card.Text>{item.description}</Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <small className=\"text-muted\">Inventory: {item.inventory}</small>\n              </Card.Footer>\n            </Card>\n            </CardDeck>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nfunction Header() {\n    return (\n        <Card>\n        <Card.Img variant=\"top\" src=\"https://images.pexels.com/photos/209439/pexels-photo-209439.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940/\" />\n        <Card.Body>\n          <Card.Text>\n          Peterson Fruit is a wholesale produce company located in Mukilteo, WA. We have been in business over 60 years.  We are a family owned company with 20 employees.  Chick and Rosalie Schindler started the business in November 1957. Their son, Eric Schindler, has taken over the daily operations and all three of his sons have contributed to our success.\n          Peterson Fruit specializes in Washington State Apples.  We also offer a variety of produce from all over the world.  We have dedicated employees who have years of experience in the produce industry and have a ton of knowledge to share.          \n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n}\nexport default Header;","import axios from \"axios\";\n\nexport default {\n  postProduce: (data) => axios.post(\"/api/produces\", data),\n  // getProduces: () => axios.get(\"/api/produces\"),\n  removeproduce: (id) => axios.delete(\"/api/produces\" + id),\n\n  postUser: (data) => axios.post(\"/api/users/signup\", data),\n\n  //login post\n  postLogin: (data) => axios.post(\"/api/users/login\", data, { withCredentials: true }),\n\n  removeproduce: (data) => axios.put(\"/api/produces\", data),\n  // getUser: (_id) => axios.get(\"/api/user/\" + _id),\n  getUser: () => axios.get(\"/api/users\"),\n\n\n  getProduce: () => axios.get(\"/api/produces\"),\n\n  update: () => axios.get(\"/api/produces\"),\n\n  saveOrder: (data) => axios.post(\"/api/orders\", data),\n\n  getOrder : () => axios.get(\"/api/orders\")\n\n};\n","import React, { useState, useEffect } from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport Wrapper from \"../components/Wrapper\";\nimport Header from \"../components/Header\";\nimport API from \"../utils/API\";\n\nconst Home = (props) => {\n  const [produce, produceState] = useState([]);\n  \n\n  \n  useEffect(() => {\n    API.getProduce()\n      .then((res) => {\n        console.log(res);\n        produceState(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <Wrapper>\n      <Header />\n      {/* <h1 style={{ color: \"White\", margin: \"30px\" }} > Status: {props.loggedInStatus}</h1> */}\n\n      <br></br>\n      <ProductList produce={produce} />\n    </Wrapper>\n  );\n};\n\nexport default Home;\n\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron border border-success\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  SET_CURRENT_POST,\n  REMOVE_POST,\n  UPDATE_POSTS,\n  ADD_POST,\n  ADD_FAVORITE,\n  UPDATE_FAVORITES,\n  REMOVE_FAVORITE,\n  LOADING\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case SET_CURRENT_POST:\n    return {\n      ...state,\n      currentPost: action.post,\n      loading: false\n    };\n\n  case UPDATE_POSTS:\n    return {\n      ...state,\n      posts: [...action.posts],\n      loading: false\n    };\n\n  case ADD_POST:\n    return {\n      ...state,\n      posts: [action.post, ...state.posts],\n      loading: false\n    };\n\n  case REMOVE_POST:\n    return {\n      ...state,\n      posts: state.posts.filter((post) => {\n        return post._id !== action._id; \n      })\n    };\n\n  case ADD_FAVORITE:\n    return {\n      ...state,\n      favorites: [action.post, ...state.favorites],\n      loading: false\n    };\n\n  case UPDATE_FAVORITES:\n    return {\n      ...state,\n      favorites: [...state.favorites],\n      loading: false\n    };\n\n  case REMOVE_FAVORITE:\n    return {\n      ...state,\n      favorites: state.favorites.filter((post) => {\n        return post._id !== action._id; \n      })\n    };\n\n  case LOADING:\n    return {\n      ...state,\n      loading: true\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    posts: [],\n    currentPost: {\n      _id: 0,\n      title: \"\",\n      body: \"\",\n      author: \"\"\n    },\n    favorites: [],\n    loading: false\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Modal, Dropdown, Form, Button } from \"react-bootstrap\"; import \"react-bootstrap\";\nimport API from \"../../utils/API\";\n\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      password: null,\n      title: \"Member\",\n      isLoggedIn: true,\n     \n      formErrors: {\n        username: \"\",\n        password: \"\",\n        title: \"\"\n      },\n      setShow: false,\n      type: 'input',\n      hidden: true,\n      LogginError: \"\"\n    };\n\n\n    this.toggleShow = this.toggleShow.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Username: ${this.state.username}\n        Password: ${this.state.password}\n        Title: ${this.state.title}\n      `);\n\n    } else {\n      this.setState({ setShow: true });\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n\n\n    API.postLogin(this.state)\n      .then((response) => {\n        \n        this.setState({title:response.data.title});\n        this.setState({password:response.data.password});\n        console.log(response.data.title, \"Logged in!!!\", this.state);\n\n        localStorage.setItem('userData',\n          JSON.stringify(this.state));\n\n        this.props.handleSuccessfulAuth(this.state);\n\n      }).catch((err) => {\n\n        this.setState({ setShow: true });\n        this.setState({ LogginError: \"username/password incorrect\" })\n        \n      });\n\n  }\n\n  handleChange = e => {\n\n    e.preventDefault();\n\n    //the name here is indicating the name from the input\n    // for example:\n    // if a name in input is username, then the name here will be username\n    // the value here is whatever the vaule of the user input.\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"username\":\n        formErrors.username =\n          value.length < 4 ? \"minimum 4 characaters required\" : \"\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value });\n\n  };\n\n\n  toggleShow() {\n    this.setState({ hidden: !this.state.hidden });\n  };\n\n\n\n\n\n  render() {\n    const { formErrors } = this.state;\n\n\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          \n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"username\"\n                onChange={this.handleChange}\n              />\n              {formErrors.username.length > 0 && (\n                <span className=\"errorMessage\"> {formErrors.username}</span>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type={this.state.hidden ? \"password\" : \"text\"}\n                name=\"password\"\n                placeholder=\"password\"\n                onChange={this.handleChange} />\n              <Button onClick={this.toggleShow}\n              >{this.state.type === 'input' ? 'Show' : 'Hide'}\n              </Button>\n            </div>\n\n            <Form inline>\n\n\n              {/* <Dropdown\n                name=\"title\"\n                id=\"selector\"\n                onChange={this.handleChange} >\n                <Dropdown.Item value=\"member\" selected>Member</Dropdown.Item>\n                <Dropdown.Item value=\"manager\">Manager</Dropdown.Item>\n              </Dropdown> */}\n\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\"> {formErrors.password}</span>\n              )}\n            </Form>\n\n          </div>\n        </div>\n        <div className=\"footer\">\n          <Button\n            type=\"button\"\n            className=\"btn\"\n            onClick={this.handleSubmit}\n          >\n            Login\n          </Button>\n\n        </div>\n\n        <Modal\n          show={this.state.setShow}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n              <span className=\"modalTitle\"> OOOps!</span>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span className=\"errorMessage\"> {this.state.LogginError}</span>\n          </Modal.Body>\n          <Modal.Footer>\n            <button\n              onClick={() => \n                {this.setState({ setShow: false });\n                window.location.replace(\"/\");\n                localStorage.removeItem('userData');\n                localStorage.removeItem('data');}}\n            >Close</button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\nexport default Login;","import React from \"react\";\nimport API from \"../../utils/API\";\nimport \"./style.scss\";\nimport zxcvbn from 'zxcvbn';\nimport \"react-bootstrap\";\nimport { Modal, Button } from \"react-bootstrap\";\n\n\n\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      email: null,\n      password: null,\n      address: null,\n      title: \"Member\",\n      formErrors: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\"\n      },\n      setShow: false,\n      type: 'input',\n      score: 'null',\n      hidden: true,\n      RegisterError: \"\"\n    };\n\n\n    this.toggleShow = this.toggleShow.bind(this);\n    this.passwordStrength = this.passwordStrength.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  };\n\n\n\n  passwordStrength(e) {\n\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    if (e.target.value === '') {\n      this.setState({\n        score: 'null'\n      })\n    }\n    else {\n      var pw = zxcvbn(e.target.value);\n      this.setState({\n        score: pw.score\n      });\n    }\n    this.setState({ formErrors, [name]: value });\n\n  }\n\n\n  handleSubmit = e => {\n\n    \n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        Username: ${this.state.username}\n        Email: ${this.state.email}\n        Password: ${this.state.password}\n        Address: ${this.state.address}\n        Title: ${this.state.title}\n      `);\n\n    } else {\n      this.setState({ setShow: true });\n      this.setState({ RegisterError: \"FORM INVALID - DISPLAY ERROR MESSAGE\" });\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n\n    API.postUser(this.state)\n      .then((response) => {\n        console.log(\"registered:\", response);\n        window.location.replace(\"/signUpsuccess\");\n      }\n      )\n      .catch(() => {\n        this.setState({ setShow: true });\n        this.setState({ RegisterError : \"username has already been taken\"})\n        \n      })\n\n\n  };\n\n\n  handleChange = e => {\n\n    e.preventDefault();\n\n    //the name here is indicating the name from the input\n    // for example:\n    // if a name in input is username, then the name here will be username\n    // the value here is whatever the vaule of the user input.\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"username\":\n        formErrors.username =\n          value.length < 4 ? \"minimum 4 characaters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value });\n\n  };\n\n\n  toggleShow() {\n    this.setState({ hidden: !this.state.hidden });\n  };\n\n\n  render() {\n\n    const { formErrors } = this.state;\n    // let setShowClose = () => this.setState({ setShow: false });\n\n\n    return (\n      <>\n        <div className=\"base-container\" ref={this.props.containerRef}>\n          <div className=\"header\">Register</div>\n          <div className=\"content\">\n            <div className=\"form\">\n              <div className=\"form-group\">\n\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"username\"\n                  onChange={this.handleChange}\n                />\n                {formErrors.username.length > 0 && (\n                  <span className=\"errorMessage\"> {formErrors.username}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  onChange={this.handleChange}\n                />\n                {formErrors.email.length > 0 && (\n                  <span className=\"errorMessage\"> {formErrors.email}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n\n                <label htmlFor=\"address\">Address</label>\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  placeholder=\"address\"\n                  onChange={this.handleChange}\n                />\n                {formErrors.address.length > 0 && (\n                  <span className=\"errorMessage\"> {formErrors.Address}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n\n                <input\n                  className=\"password__input\"\n                  type={this.state.hidden ? \"password\" : \"text\"}\n                  name=\"password\"\n                  placeholder=\"password\"\n                  // onChange={this.handleChange}\n                  onChange={this.passwordStrength}\n                />\n                <Button onClick={this.toggleShow}\n                >{this.state.type === 'input' ? 'Show' : 'Hide'}</Button>\n\n                <span className=\"password__strength\" data-score={this.state.score} />\n\n                {formErrors.password.length > 0 && (\n                  <span className=\"errorMessage\"> {formErrors.password}</span>\n                )}\n\n              </div>\n              <Button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handleSubmit}\n              >\n                Register\n          </Button>\n            </div>\n          </div>\n          <div className=\"footer\">\n\n          </div>\n\n\n          <Modal\n            show={this.state.setShow}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"example-modal-sizes-title-sm\">\n              OOOps...\n          </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <span className=\"errorMessage\"> {this.state.RegisterError}</span>\n            </Modal.Body>\n            <Modal.Footer>\n            <button\n              onClick={() => \n                {this.setState({ setShow: false });\n                window.location.replace(\"/\");\n                localStorage.removeItem('userData');\n                localStorage.removeItem('data');}}\n            >Close</button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\nexport default Register;","import React from \"react\";\n// import { hasHistory } from \"react-router-dom\";\nimport \"./index.scss\";\nimport Login from \"../Login/login\";\nimport Register from \"../Login/regiester\";\n\n// import API from \"../../utils/API\";\n\n//login home page\n\nclass LoginIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true,\n      isAuthenicated: false\n    };\n    this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this);\n    console.log(\"-LoginIndex _ check status: \", this.props)\n  }\n\n \n  handleSuccessfulAuth(data) {\n    //update parent compoent\n    \n    console.log('x', data);\n    this.props.handleLogin(data);\n    window.location.replace(\"/\");\n  }\n\n  componentDidMount() {\n    //Add .right by default\n    this.rightSide.classList.add(\"right\");\n  }\n\n\n  changeState() {\n    const { isLogginActive } = this.state;\n\n    if (isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n\n\n\n\n\n  render() {\n\n\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n\n\n    return (\n\n      <div className=\"App\">\n        <div className=\"login\">\n          \n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            \n            {isLogginActive && (\n              <Login \n              containerRef={ref => (this.current = ref)} \n              handleSuccessfulAuth={this.handleSuccessfulAuth} />\n            )}\n\n            {!isLogginActive && (\n              <Register containerRef={ref => (this.current = ref)} />\n            )}\n          </div>\n\n\n          <RightSide\n            current={current}\n            currentActive={currentActive}\n            containerRef={ref => (this.rightSide = ref)}\n            onClick={this.changeState.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginIndex;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport LoginIndex from \"../Login/index\";\n// import UserMenu from \"../userMenu/index\";\nimport { Modal, NavDropdown, Nav, Navbar, Form, Button } from \"react-bootstrap\";\n\nimport \"./style.css\";\n\nclass Navbars extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInStatus: \"Logged_In\",\n      user: {},\n      show: false,\n      showUser: false,\n      showLogin: true\n    }\n    console.log(\"y\", props.loggedInStatus)\n    console.log(\"x\", props.data)\n  }\n\n  componentWillMount() {\n\n    let data = [];\n    if (localStorage && localStorage.getItem('userData')) {\n      data = JSON.parse(localStorage.getItem('userData'));\n\n    }\n\n    this.setState({ user: data });\n    console.log(data, this.state.user);\n  }\n\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n  render() {\n\n\n    return (\n\n      <div>\n\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/home\">Peterson</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/home\">Home</Nav.Link>\n              <Nav.Link href=\"/product\">Product</Nav.Link>\n\n\n\n\n\n              <NavDropdown\n                title={\"User: \" + this.state.user.username}\n                id=\"basic-nav-dropdown\"\n                className={!this.state.user.username ? 'hidden' : ''}\n              >\n\n                <img src=\"./assets/imgs/person.svg\" alt=\"icon\"></img>\n\n\n                {/* <NavDropdown.Item\n                  href=\"/shopping-cart\"\n                  className={this.state.user.title === \"Member\" ? '' : 'hidden'}\n                >Shopping Cart</NavDropdown.Item> */}\n\n\n                <NavDropdown.Item className={this.state.user.title === \"Member\" ? '' : 'hidden'}>\n                  <Link to=\"/shopping-cart\">Shopping Cart</Link>\n                </NavDropdown.Item>\n\n\n                <NavDropdown.Item className={this.state.user.title === \"Manager\" ? '' : 'hidden'}>\n                  <Link to=\"/category\">Update Inventory</Link>\n                </NavDropdown.Item>\n\n                <NavDropdown.Item className={this.state.user.title === \"Manager\" ? '' : 'hidden'}>\n                  <Link to=\"/transactionHistory\">Orders</Link>\n                </NavDropdown.Item>\n\n\n                <NavDropdown.Item className={this.state.user.title === \"Member\" ? '' : 'hidden'}>\n                  <Link to=\"/transactionHistory\">Transaction History</Link>\n                </NavDropdown.Item>\n\n                {/* <NavDropdown.Item href=\"/transactionHistory\">Transaction History</NavDropdown.Item> */}\n                <NavDropdown.Item>\n                  <Link to=\"/contacts\">Contact Us</Link>\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\"\n                  onClick={this.props.handleLogout}\n                >Sign Out</NavDropdown.Item>\n              </NavDropdown>\n\n            </Nav>\n\n            <Form inline>\n              {/* disable search function for now， Nothing is built here yet */}\n              {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-success\">Search</Button> */}\n              <hr />\n\n              {/* modal open button */}\n\n              <Button\n                type=\"button\"\n                onClick={this.showModal}\n                className={!this.state.user.username ? '' : 'hidden'}\n              >Login</Button>\n\n\n            </Form>\n\n          </Navbar.Collapse>\n\n          {/* modal window front end set up - body */}\n          <Modal show={this.state.show}>\n\n            <LoginIndex\n              handleLogin={this.props.handleLogin}\n              loggedInStatus={this.props.loggedInStatus}\n            />\n\n\n            <Modal.Footer>\n              <Button type=\"button\"\n                onClick={() =>\n\n                  window.location.replace(\"/\")\n\n                }>close</Button>\n            </Modal.Footer>\n          </Modal>\n          {/* modal end */}\n\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navbars;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport types from \"./types\";\n\nconst produceContext = createContext();\nconst initialState = {\n  order: [],\n  // produce: [],\n};\n\nconst reducer = (state, action) => {\n  console.log(\"action: \", action);\n  switch (action.type) {\n    case types.SET_PRODUCE:\n      return {\n        ...state,\n        produce: action.payload,\n      };\n    case types.SET_ORDERS:\n      console.log(action.payload);\n      return {\n        ...state,\n        order: action.payload,\n      };\n    case types.CLEAR_ORDERS:\n      console.log(\"CLEAR_ORDERS\");\n      return {\n        order: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst { Provider } = produceContext;\nexport const ProduceProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const value = { state, dispatch, types };\n  return <Provider value={value}>{props.children}</Provider>;\n};\n\nexport const useProduceContext = () => useContext(produceContext);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Navbars from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport FavoritesList from \"./pages/FavoritesList\";\n// import LoginIndex from \"./components/Login\";\n// import LoginIndex from \"./components/Login\";\nimport Product from \"./pages/ProductList\";\nimport Member from \"./pages/member\";\nimport SignUpsuccess from \"./pages/signUpsuccess\";\nimport ShopingCart from \"./pages/shopping-cart\";\nimport ManagerTest from \"./pages/ManagerTest\";\nimport TransactionHistory from \"./components/TransactionHistory\";\nimport Contacts from \"./components/Contacts\";\n// import product from \"./pages/Product\";\nimport { ProduceProvider } from './context/ProduceContext'\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       loggedInStatus: \"Not_Logged_In\",\n//       user: {}\n//     };\n//     this.handleLogin = this.handleLogin.bind(this);\n//     this.handleLogout = this.handleLogout.bind(this);\n\n//   }\n\n\n//   handleLogout() {\n//     this.setState({\n//       loggedInStatus: \"NOT_LOGGED_IN\",\n//       user: {}\n//     });\n//     localStorage.removeItem('userData');\n//     window.location.replace(\"/\");\n//   }\n\n//   handleLogin(data) {\n\n//     this.setState({\n//       loggedInStatus: \"Logged_In\",\n//       user: data\n//     });\n//   }\n\nfunction App() {\n\n  // render() {\n  return (\n    <Router>\n      {/* <ProduceProvider>\n          <Navbars\n            {...this.props}\n            handleLogin={this.handleLogin}\n            handleLogout={this.handleLogout}\n          />\n\n          <Switch> */}\n      <Route exact path={\"/\"} component={Home} />\n      <Route exact path={\"/home\"} component={Home} />\n\n      {/* <Route exact path={\"/member\"} render={props => (\n              <Member\n                {...props}\n                loggedInStatus={this.state.loggedInStatus}\n              />\n            )}\n            />\n\n            <Route exact path=\"/product\" component={Product} />\n            <Route exact path=\"/category\" component={ManagerTest} />\n            <Route exact path=\"/shopping-cart\" component={ShopingCart} />\n            <Route exact path=\"/favorites\" component={FavoritesList} />\n            <Route exact path=\"/posts/:id\" component={Detail} />\n            <Route\n              exact\n              path=\"/transactionHistory\"\n              component={TransactionHistory}\n            />\n\n            <Route exact path=\"/signUpsuccess\" component={SignUpsuccess} />\n            <Route exact path=\"/contacts\" component={Contacts} />\n            <Route component={NoMatch} />\n\n          </Switch>\n          <Footer />\n        </ProduceProvider> */}\n    </Router>\n  )\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n// function App() {\n//   return (\n//     <Router>\n//       <>\n//         <Navbars />\n//         <Switch>\n//           <Route exact path=\"/\" component={Home} />\n//           <Route exact path=\"/home\" component={Home} />\n//           <Route exact path=\"/Login\" component={LoginIndex} />\n//           <Route exact path=\"/member\" component={member} />\n//           <Route exact path=\"/userMenu\" component={UserMenu} />\n//           <Route exact path=\"/product\" component={Product} />\n//           <Route exact path=\"/category\" component={ManagerTest} />\n//           <Route exact path=\"/shopping-cart\" component={ShopingCart} />\n//           <Route exact path=\"/favorites\" component={FavoritesList} />\n//           <Route exact path=\"/posts/:id\" component={Detail} />\n//           <Route\n//             exact\n//             path=\"/transactionHistory\"\n//             component={TransactionHistory}\n//           />\n//           <Route exact path=\"/contacts\" component={Contacts} />\n//           <Route component={NoMatch} />\n//         </Switch>\n//         <Footer />\n//       </>\n//     </Router>\n//   );\n// }\n\n// export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}